//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorTypes) DeepCopyInto(out *AcceleratorTypes) {
	*out = *in
	if in.LabelValues != nil {
		in, out := &in.LabelValues, &out.LabelValues
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorTypes.
func (in *AcceleratorTypes) DeepCopy() *AcceleratorTypes {
	if in == nil {
		return nil
	}
	out := new(AcceleratorTypes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerSpec) DeepCopyInto(out *ContainerSpec) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvFrom != nil {
		in, out := &in.EnvFrom, &out.EnvFrom
		*out = make([]v1.EnvFromSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerSpec.
func (in *ContainerSpec) DeepCopy() *ContainerSpec {
	if in == nil {
		return nil
	}
	out := new(ContainerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelArtifacts) DeepCopyInto(out *ModelArtifacts) {
	*out = *in
	if in.AuthSecretName != nil {
		in, out := &in.AuthSecretName, &out.AuthSecretName
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		x := (*in).DeepCopy()
		*out = &x
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelArtifacts.
func (in *ModelArtifacts) DeepCopy() *ModelArtifacts {
	if in == nil {
		return nil
	}
	out := new(ModelArtifacts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelService) DeepCopyInto(out *ModelService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelService.
func (in *ModelService) DeepCopy() *ModelService {
	if in == nil {
		return nil
	}
	out := new(ModelService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServiceList) DeepCopyInto(out *ModelServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ModelService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServiceList.
func (in *ModelServiceList) DeepCopy() *ModelServiceList {
	if in == nil {
		return nil
	}
	out := new(ModelServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ModelServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServicePodSpec) DeepCopyInto(out *ModelServicePodSpec) {
	*out = *in
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]ContainerSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitContainers != nil {
		in, out := &in.InitContainers, &out.InitContainers
		*out = make([]ContainerSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServicePodSpec.
func (in *ModelServicePodSpec) DeepCopy() *ModelServicePodSpec {
	if in == nil {
		return nil
	}
	out := new(ModelServicePodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServiceSpec) DeepCopyInto(out *ModelServiceSpec) {
	*out = *in
	if in.BaseConfigMapRef != nil {
		in, out := &in.BaseConfigMapRef, &out.BaseConfigMapRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
	in.Routing.DeepCopyInto(&out.Routing)
	in.ModelArtifacts.DeepCopyInto(&out.ModelArtifacts)
	if in.Decode != nil {
		in, out := &in.Decode, &out.Decode
		*out = new(PDSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Prefill != nil {
		in, out := &in.Prefill, &out.Prefill
		*out = new(PDSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.EndpointPicker != nil {
		in, out := &in.EndpointPicker, &out.EndpointPicker
		*out = new(ModelServicePodSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServiceSpec.
func (in *ModelServiceSpec) DeepCopy() *ModelServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ModelServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelServiceStatus) DeepCopyInto(out *ModelServiceStatus) {
	*out = *in
	if in.PrefillDeploymentRef != nil {
		in, out := &in.PrefillDeploymentRef, &out.PrefillDeploymentRef
		*out = new(string)
		**out = **in
	}
	if in.DecodeDeploymentRef != nil {
		in, out := &in.DecodeDeploymentRef, &out.DecodeDeploymentRef
		*out = new(string)
		**out = **in
	}
	if in.EppDeploymentRef != nil {
		in, out := &in.EppDeploymentRef, &out.EppDeploymentRef
		*out = new(string)
		**out = **in
	}
	if in.InferenceModelRef != nil {
		in, out := &in.InferenceModelRef, &out.InferenceModelRef
		*out = new(string)
		**out = **in
	}
	if in.InferencePoolRef != nil {
		in, out := &in.InferencePoolRef, &out.InferencePoolRef
		*out = new(string)
		**out = **in
	}
	if in.PDServiceAccountRef != nil {
		in, out := &in.PDServiceAccountRef, &out.PDServiceAccountRef
		*out = new(string)
		**out = **in
	}
	if in.DecodeServiceAccountRef != nil {
		in, out := &in.DecodeServiceAccountRef, &out.DecodeServiceAccountRef
		*out = new(string)
		**out = **in
	}
	if in.EppRoleBinding != nil {
		in, out := &in.EppRoleBinding, &out.EppRoleBinding
		*out = new(string)
		**out = **in
	}
	if in.ConfigMapNames != nil {
		in, out := &in.ConfigMapNames, &out.ConfigMapNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelServiceStatus.
func (in *ModelServiceStatus) DeepCopy() *ModelServiceStatus {
	if in == nil {
		return nil
	}
	out := new(ModelServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDSpec) DeepCopyInto(out *PDSpec) {
	*out = *in
	in.ModelServicePodSpec.DeepCopyInto(&out.ModelServicePodSpec)
	if in.Parallelism != nil {
		in, out := &in.Parallelism, &out.Parallelism
		*out = new(Parallelism)
		(*in).DeepCopyInto(*out)
	}
	if in.AcceleratorTypes != nil {
		in, out := &in.AcceleratorTypes, &out.AcceleratorTypes
		*out = new(AcceleratorTypes)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDSpec.
func (in *PDSpec) DeepCopy() *PDSpec {
	if in == nil {
		return nil
	}
	out := new(PDSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parallelism) DeepCopyInto(out *Parallelism) {
	*out = *in
	if in.Tensor != nil {
		in, out := &in.Tensor, &out.Tensor
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parallelism.
func (in *Parallelism) DeepCopy() *Parallelism {
	if in == nil {
		return nil
	}
	out := new(Parallelism)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Port) DeepCopyInto(out *Port) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Port.
func (in *Port) DeepCopy() *Port {
	if in == nil {
		return nil
	}
	out := new(Port)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Routing) DeepCopyInto(out *Routing) {
	*out = *in
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]Port, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Routing.
func (in *Routing) DeepCopy() *Routing {
	if in == nil {
		return nil
	}
	out := new(Routing)
	in.DeepCopyInto(out)
	return out
}
