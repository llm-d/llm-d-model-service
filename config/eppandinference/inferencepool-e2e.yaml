apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: modelservice
    app.kubernetes.io/managed-by: kustomize
  name: inferenceandepp
---
# The deployer has to create and deploy this 
# The ModelService operator is not creating this for the summit-demo

apiVersion: inference.networking.x-k8s.io/v1alpha2
kind: InferencePool
metadata:
  name: vllm-llama-4-scout-17b-16e-instruct
spec:
  # Need to match operatordefaults.yaml/vllmdProxyContainer.ports and look for the "proxy-port" name AND "port" in vllmdProxyContainer.args.args 
  targetPortNumber: 8000
  selector:
    app: vllm-llama-4-scout-17b-16e-instruct
  extensionRef:
    name: vllm-llama-4-scout-17b-16e-instruct-epp
    # model-related artifacts will be in the same namespace
    # namespace: $E2E_NS
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-llama-4-scout-17b-16e-instruct-epp
  # model-related artifacts will be in the same namespace
  # namespace: $E2E_NS
spec:
  selector:
    app: vllm-llama-4-scout-17b-16e-instruct-epp
  ports:
    - protocol: TCP
      port: 9002
      targetPort: 9002
      appProtocol: http2
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-llama-4-scout-17b-16e-instruct-epp
  # model-related artifacts will be in the same namespace
  # namespace: $E2E_NS
  labels:
    app: vllm-llama-4-scout-17b-16e-instruct-epp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vllm-llama-4-scout-17b-16e-instruct-epp
  template:
    metadata:
      labels:
        app: vllm-llama-4-scout-17b-16e-instruct-epp
    spec:
      # Conservatively, this timeout should mirror the longest grace period of the pods within the pool
      terminationGracePeriodSeconds: 130
      serviceAccountName: inferenceandepp     
      containers:
      - name: epp
        image: us-central1-docker.pkg.dev/k8s-staging-images/gateway-api-inference-extension/epp:main
        imagePullPolicy: Always
        args:
        - -poolName
        - "vllm-llama-4-scout-17b-16e-instruct"
        # model-related artifacts will be in the same namespace
        # - -poolNamespace
        # - "$E2E_NS"
        - -v
        - "4"
        - --zap-encoder
        - "json"
        - -grpcPort
        - "9002"
        - -grpcHealthPort
        - "9003"
        env:
        - name: USE_STREAMING
          value: "true"
        ports:
        - containerPort: 9002
        - containerPort: 9003
        - name: metrics
          containerPort: 9090
        livenessProbe:
          grpc:
            port: 9003
            service: inference-extension
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          grpc:
            port: 9003
            service: inference-extension
          initialDelaySeconds: 5
          periodSeconds: 10
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-read
rules:
- apiGroups: ["inference.networking.x-k8s.io"]
  resources: ["inferencemodels"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["inference.networking.x-k8s.io"]
  resources: ["inferencepools"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["get", "watch", "list"]
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
--- 
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-read-binding
subjects:
- kind: ServiceAccount
  name: inferenceandepp
  # model-related artifacts will be in the same namespace
  # namespace: $E2E_NS
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-read